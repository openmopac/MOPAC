name: CI

on:
  push:
    branches:    
      - main
      - flang-test
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"

jobs:
  linux-flang:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check number of cores
        run: |
          lscpu
          lscpu | grep "CPU(s):                       " | awk '{print $2}' > num_cores
          echo "NUM_CORES=$(cat num_cores)" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: '3.11'
          channels: conda-forge
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

      - name: Install dependencies with conda-forge
        run: |
          conda install numpy
          conda install flang
          conda install openblas

      - name: Configure MOPAC with CMake
        run: |
          cmake -B build \
            -DCMAKE_LIBRARY_PATH=$CONDA/lib \
            -DPython3_EXECUTABLE=$CONDA/bin/python \
            -DCMAKE_Fortran_COMPILER=$CONDA/bin/flang-new

      - name: Build MOPAC with Make
        run: |
          cmake --build build -- -j$NUM_CORES

      - name: Test MOPAC with CTest
        run: |
          cd build
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA/lib
          ctest -V -j $NUM_CORES

      - name: Save test results as an artifact (on failure)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: linux-flang-test-output
          path: build/tests

  windows-flang:
    runs-on: windows-latest
    timeout-minutes: 30
            
    steps:
      - name: Check number of cores
        shell: bash
        run: |
          WMIC CPU Get -Format:List
          WMIC CPU Get NumberOfLogicalProcessors | head -2 | tail -1 > num_cores
          echo "NUM_CORES=$(cat num_cores)" >> $GITHUB_ENV
          
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true  
          python-version: '3.11'
          channels: conda-forge
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list
      
      - name: Install stuff
        shell: bash -el {0}
        run: |
          conda install numpy
          conda install flang
          conda install ninja
          conda install openblas

      - name: Configure MOPAC with CMake
        shell: bash -el {0}
        run: |
          conda activate test
          ls $CONDA
          ls $CONDA/condabin
          ls $CONDA/Tools
          ls $CONDA/bin
          ls $CONDA/sbin
          cmake -Bbuild \
            -GNinja \
            -DCMAKE_LIBRARY_PATH=$CONDA/lib \
            -DPython3_EXECUTABLE=$CONDA/python \
            -DCMAKE_Fortran_COMPILER=flang-new

      - name: Build MOPAC with Ninja
        shell: bash -el {0}
        run: |
          cmake --build build -- -v

      - name: Test MOPAC with CTest
        shell: bash -el {0}
        run: |
          cd build
          ctest -V -j $NUM_CORES
 
      - name: Save test results as an artifact (on failure)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: windows-flang-test-output
          path: build/tests
