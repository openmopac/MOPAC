name: CI

on:
  push:
    branches:    
      - main
      - linux-flang-test
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"

jobs:
  linux-flang:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check number of cores
        run: |
          lscpu
          lscpu | grep "CPU(s):                       " | awk '{print $2}' > num_cores
          echo "NUM_CORES=$(cat num_cores)" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: '3.11'
          channels: conda-forge
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

      - name: Install dependencies with conda-forge
        run: |
          conda install numpy
          conda install flang
          conda install openblas

      - name: Configure MOPAC with CMake
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_LIBRARY_PATH=$CONDA/lib \
            -DPython3_EXECUTABLE=$CONDA/bin/python \
            -DCMAKE_Fortran_COMPILER=$CONDA/bin/flang-new \
            -DCMAKE_Fortran_FLAGS="-O0 -g"

      - name: Build MOPAC with Make
        run: |
          cmake --build build -- -j$NUM_CORES

      - name: Test MOPAC with CTest
        continue-on-error: true
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA/lib
          cd build
          cd tests
          cp ../../tests/test_Lewis_for_Proteins4.mop .
          ../mopac test_Lewis_for_Proteins4.mop
#          ctest -VV -R lewis

      - name: Run Valgrind on MOPAC API tester
        run: |
          sudo apt update && sudo apt install -y valgrind
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA/lib
          cd build/tests
          valgrind -s --main-stacksize=167772160 --track-origins=yes --leak-check=yes ../mopac test_Lewis_for_Proteins4.mop

      - name: Save test results as an artifact (on failure)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: linux-flang-test-output
          path: build/tests
